# This config was automatically generated from your source code
# Stacks detected: deps:java:android,deps:node:.,deps:ruby:.,package_manager:yarn:,test:jest:,tool:gradle:
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Run tests
          command: yarn test
      - store_test_results:
          path: ./test-results/
  # android-build-and-upload-to-google-play:
  #   working_directory: ~/repo
  #   docker:
  #     - image: 'cimg/android:2024.01.1-node'
  #   steps:
  #     - checkout:
  #         path: ~/repo
  #     - restore_cache:
  #         key: 'node-v5-{{ checksum "package.json" }}-{{ arch }}'
  #     - run:
  #         name: npm secret TOKEN replacement
  #         command: echo "@Cavago-PTE-LTD:registry=https://npm.pkg.github.com/" > ~/.npmrc && echo "//npm.pkg.github.com/:_authToken=${TOKEN}" >> ~/.npmrc
  #     - run:
  #         name: 'Setup custom environment variables'
  #         command: node ./scripts/setup_env_variables.js
  #     - run:
  #         name: Create .env file
  #         command: ./prepareEnv.sh
  #     - run:
  #         name: Install Ninja
  #         command: |
  #           sudo apt-get update && sudo apt-get install -y ninja-build
  #     - run:
  #         name: Install CMake
  #         command: |
  #           wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-Linux-x86_64.tar.gz
  #           tar -xzvf cmake-3.22.1-Linux-x86_64.tar.gz -C $HOME
  #           export PATH=$HOME/ninja:$HOME/cmake-3.22.1-Linux-x86_64/bin:$PATH
  #     - run:
  #         name: Set CMake and Ninja Paths
  #         command: |
  #           export PATH=$HOME/ninja:$HOME/cmake-3.22.1-Linux-x86_64/bin:$PATH
  #     - run:
  #         name: Accept Android SDK Licenses
  #         command: yes | sdkmanager --licenses || if [ $? -ne '141' ]; then exit $?; fi;
  #     - run: yarn install
  #     - save_cache:
  #         key: 'node-v5-{{ checksum "package.json" }}-{{ arch }}'
  #         paths:
  #           - node_modules
  #     - attach_workspace:
  #         at: ~/repo
  #     - restore_cache:
  #         key: 'bundle-v5-{{ checksum "android/Gemfile" }}-{{ arch }}'
  #     - run:
  #         name: Fix Ruby permissions
  #         command: sudo chown -R circleci:circleci /var/lib/gems /usr/local/bin && sudo chmod -R 755 /var/lib/gems /usr/local/bin
  #     - run:
  #         name: Install fastlane
  #         command: bundle install
  #         working_directory: android
  #     - save_cache:
  #         key: 'bundle-v5-{{ checksum "android/Gemfile" }}-{{ arch }}'
  #         paths:
  #           - vendor/bundle
  #     - run:
  #         name: fastlane upload to google play
  #         command: bundle exec fastlane deploy
  #         working_directory: android
  #     - run:
  #         name: fastlane Generate APK
  #         command: bundle exec fastlane apk
  #         working_directory: android

  #     - store_artifacts:
  #         path: android/app/build/outputs/

  # macos-build-and-upload-to-testflight:
  #   working_directory: ~/repo
  #   macos:
  #     xcode: 15.2.0
  #   resource_class: macos.m1.medium.gen1
  #   environment:
  #     FL_OUTPUT_DIR: output

  #   steps:
  #     - checkout:
  #         path: ~/repo

  #     - restore_cache:
  #         key: node-v5-{{ checksum "package.json" }}-{{ arch }}

  #     - run:
  #         name: npm secret TOKEN replacement
  #         command: echo "@Cavago-PTE-LTD:registry=https://npm.pkg.github.com/" > ~/.npmrc && echo "//npm.pkg.github.com/:_authToken=${TOKEN}" >> ~/.npmrc

  #     - run:
  #         name: 'Setup custom environment variables'
  #         command: node ./scripts/setup_env_variables.js

  #     - run:
  #         name: Create .env file
  #         command: ./prepareEnv.sh

  #     - run: yarn install

  #     - save_cache:
  #         key: node-v5-{{ checksum "package.json" }}-{{ arch }}
  #         paths:
  #           - node_modules

  #     #Pods directory is ignored to match default RN setup, but can also check them into source control
  #     #https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
  #     - restore_cache:
  #         key: pods-v5-{{ checksum "ios/Podfile" }}-{{ arch }}

  #     - run:
  #         name: Install cocoapods
  #         command: bundle install

  #     - run:
  #         command: pod install
  #         working_directory: ios

  #     - save_cache:
  #         key: pods-v5-{{ checksum "ios/Podfile" }}-{{ arch }}
  #         paths:
  #           - ios/Pods

  #     - restore_cache:
  #         key: 'bundle-v5-{{ checksum "ios/Gemfile" }}-{{ arch }}'

  #     - run:
  #         name: Install fastlane
  #         command: bundle install
  #         working_directory: ios

  #     - save_cache:
  #         key: 'bundle-v5-{{ checksum "ios/Gemfile" }}-{{ arch }}'
  #         paths:
  #           - vendor/bundle

  #     - run:
  #         name: Fastlane
  #         command: bundle exec fastlane upload_testflight
  #         working_directory: ios

  #     - store_artifacts:
  #         path: ios/output

  # macos-build-adhoc:
  #   working_directory: ~/repo
  #   macos:
  #     xcode: 15.2.0
  #   resource_class: macos.m1.medium.gen1
  #   environment:
  #     FL_OUTPUT_DIR: output

  #   steps:
  #     - checkout:
  #         path: ~/repo

  #     - restore_cache:
  #         key: node-v5-{{ checksum "package.json" }}-{{ arch }}

  #     - run:
  #         name: npm secret TOKEN replacement
  #         command: echo "@Cavago-PTE-LTD:registry=https://npm.pkg.github.com/" > ~/.npmrc && echo "//npm.pkg.github.com/:_authToken=${TOKEN}" >> ~/.npmrc

  #     - run:
  #         name: 'Setup custom environment variables'
  #         command: node ./scripts/setup_env_variables.js

  #     - run:
  #         name: Create .env file
  #         command: ./prepareEnv.sh

  #     - run: yarn install

  #     - save_cache:
  #         key: node-v5-{{ checksum "package.json" }}-{{ arch }}
  #         paths:
  #           - node_modules

  #     #Pods directory is ignored to match default RN setup, but can also check them into source control
  #     #https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
  #     - restore_cache:
  #         key: pods-v5-{{ checksum "ios/Podfile" }}-{{ arch }}

  #     - run:
  #         name: Install cocoapods
  #         command: bundle install

  #     - run:
  #         command: pod install
  #         working_directory: ios

  #     - save_cache:
  #         key: pods-v5-{{ checksum "ios/Podfile" }}-{{ arch }}
  #         paths:
  #           - ios/Pods

  #     - restore_cache:
  #         key: 'bundle-v5-{{ checksum "ios/Gemfile" }}-{{ arch }}'

  #     - run:
  #         name: Install fastlane
  #         command: bundle install
  #         working_directory: ios

  #     - save_cache:
  #         key: 'bundle-v5-{{ checksum "ios/Gemfile" }}-{{ arch }}'
  #         paths:
  #           - vendor/bundle

  #     - run:
  #         name: Fastlane
  #         command: bundle exec fastlane adhoc
  #         working_directory: ios

  #     - store_artifacts:
  #         path: ios/output

workflows:
  build-and-test:
    jobs:
      - unit-test-cases:
          filters:
            branches:
              only:
                - main
                - mushood/feature/snapshot-testing
      # - android-build-and-upload-to-google-play:
      #     filters:
      #       branches:
      #         only:
      #           - main
      # - macos-build-and-upload-to-testflight:
      #     filters:
      #       branches:
      #         only:
      #           - main
      # - macos-build-adhoc:
      #     filters:
      #       branches:
      #         only:
      #           - main

  # nightly-android-ios:
  #   triggers:
  #     - schedule:
  #         cron: '0 15 * * 1,2,3,4,5'
  #         filters:
  #           branches:
  #             only:
  #               - dev
  #   jobs:
  #     - android-build-and-upload-to-google-play
  #     - macos-build-and-upload-to-testflight

  # manual-approval-android-ios:
  #   jobs:
  #     - android-ios-build-approval:
  #         type: approval
  #         filters:
  #           branches:
  #             only:
  #               - dev
  #               - staging
  #     - android-build-and-upload-to-google-play:
  #         requires:
  #           - android-ios-build-approval
  #     - macos-build-and-upload-to-testflight:
  #         requires:
  #           - android-ios-build-approval
